# Use the C base
language: c

# Linux - use Ubuntu 14.04 Trusty Tahr instead of 12.04 Precise Pengolin.
sudo: required
dist: trusty

# Linux - add the Ubuntu restricted tool chain to install GCC 6 package
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - linux-libc-dev
    - gcc-6-multilib
    - g++-6-multilib
    - libcurl4-openssl-dev:i386
    - libpthread-stubs0-dev:i386

env:
  global:
    - COMPILER_VERSION_C=gcc-6
    - COMPILER_VERSION_CXX=g++-6
    - DEPENDENCIES_DIR="${TRAVIS_BUILD_DIR}/dependencies"

# Disable the cache for now; this isn't working quite as expected (and it's in beta)
#cache:
#  directories:
#      - ${DEPENDENCIES_DIR}/xercesc/install/include
#      - ${DEPENDENCIES_DIR}/xercesc/install/lib
    
matrix:
  allow_failures:
    # Mac OS X El Capitan 10.11.6 (Xcode 7.3.1)
    - os: osx
  include:
    # Ubuntu 14.04 Trusty Tahr amd64 (Linux) GCC 6
    # Everything disabled
    - os: linux
      env: COMPILER=gcc-6 BUILD_RULES="-DUSE_OPFOR=0 -DUSE_ANGELSCRIPT=0 -DUSE_AS_SQL=0"
    # Ubuntu 14.04 Trusty Tahr amd64 (Linux) GCC 6
    # Opposing Force
    - os: linux
      env: COMPILER=gcc-6 BUILD_RULES="-DUSE_OPFOR=1 -DUSE_ANGELSCRIPT=0 -DUSE_AS_SQL=0"
    # Ubuntu 14.04 Trusty Tahr amd64 (Linux) GCC 6
    # Opposing Force + AngelScript
    - os: linux
      env: COMPILER=gcc-6 BUILD_RULES="-DUSE_OPFOR=1 -DUSE_ANGELSCRIPT=1 -DUSE_AS_SQL=0"
    # Ubuntu 14.04 Trusty Tahr amd64 (Linux) GCC 6
    # Opposing Force + AngelScript + MariaDB
    - os: linux
      env: COMPILER=gcc-6 BUILD_RULES="-DUSE_OPFOR=1 -DUSE_ANGELSCRIPT=1 -DUSE_AS_SQL=1 -DMARIADB=${TRAVIS_BUILD_DIR}/external/MariaDB/lib/libmariadb.so.2 -DSQLITE3=${TRAVIS_BUILD_DIR}/external/SQLite/lib/libsqlite3.so"
    # Mac OS X Mavericks 10.9.5 (Xcode 6.1)
    # Everything disabled
    - os: osx
      env: BUILD_RULES="-DUSE_OPFOR=0 -DUSE_ANGELSCRIPT=0 -DUSE_AS_SQL=0"
    # Mac OS X Mavericks 10.9.5 (Xcode 6.1)
    # Opposing Force
    - os: osx
      env: BUILD_RULES="-DUSE_OPFOR=1 -DUSE_ANGELSCRIPT=0 -DUSE_AS_SQL=0"
    # TODO: Add other OS X build matrix when AngelScript and MariaDB OS X binaries are built

before_install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      sudo dpkg --add-architecture i386
      sudo apt-get -qq update
      sudo apt-get install -y linux-libc-dev:i386
    else
      brew update
    fi

install:
  # Prepare the dependencies, build and fake Steam common directories for Travis
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - STEAMCOMMON_DIR="${TRAVIS_BUILD_DIR}/steam_common"
  - mkdir -p ${DEPS_DIR} && mkdir -p ${STEAMCOMMON_DIR} && mkdir -p ${STEAMCOMMON_DIR} && mkdir -p ${STEAMCOMMON_DIR}/Half-Life && cd ${STEAMCOMMON_DIR}/Half-Life
  # Make symlinks to required libraries located in the Half-Life directory
  - ln -s ${TRAVIS_BUILD_DIR}/lib/public/vgui.so libvgui.so
  - ln -s ${TRAVIS_BUILD_DIR}/lib/public/libtier0.so libtier0.so
  - ln -s ${TRAVIS_BUILD_DIR}/lib/public/libvstdlib.so libvstdlib.so
  - cd ${DEPS_DIR}
  # Get the latest CMake version and Make symlinks so it can use VGUI properly
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.9/cmake-3.9.1-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      CMAKE_URL="http://www.cmake.org/files/v3.9/cmake-3.9.1-Darwin-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/CMake.app/Contents/bin:${PATH}
    fi

  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      COMPILER_SETTINGS="-DCMAKE_CXX_COMPILER=${COMPILER_VERSION_CXX} -DCMAKE_C_COMPILER=${COMPILER_VERSION_C}"
    fi

before_script:
  # Move to build directory
  - cd ${TRAVIS_BUILD_DIR}
    
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      # Use a toolchain file to force a 32 bit environment
      COMPILER_SETTINGS="${COMPILER_SETTINGS} -DCMAKE_TOOLCHAIN_FILE=${TRAVIS_BUILD_DIR}/cmake/Linux_32bit_toolchain.cmake"
    fi
    
  - bash ${TRAVIS_BUILD_DIR}/travis_install_dependencies.sh ${DEPENDENCIES_DIR} "${COMPILER_SETTINGS}"
  
  - mkdir build && cd build

script:
  # Just execute the cmake and make commands
  # Use the local vgui library
  # TODO: SDL should be found by CMake at all times, this needs fixing - Solokiller
  - >
    cmake ${COMPILER_SETTINGS} -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -m32" -DCMAKE_C_FLAGS="${CMAKE_C_FLAGS} -m32"
    -DSTEAMCOMMON=${STEAMCOMMON_DIR} ${BUILD_RULES}
    -Dvgui_DIR="${TRAVIS_BUILD_DIR}/lib/public"
    -DXercesC_DIR="${DEPENDENCIES_DIR}/xercesc/install/lib/cmake/XercesC"
    ..

  - make

notifications:
  email: false
  
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/a764b8bf510b89cd4472
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always
